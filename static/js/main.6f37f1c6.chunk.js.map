{"version":3,"sources":["components/Color/color-icon-remove.svg","store/colors/reducers.js","store/form/reducers.js","store/reducers.js","store/colors/actions.js","store/form/actions.js","components/AddColorForm/AddColorForm.js","components/AddColorForm/AddColorFormContainer.js","components/Star/Star.js","components/StarRating/StarRating.js","components/Color/Color.js","components/ColorList/ColorList.js","components/ColorList/ColorListContainer.js","App.js","index.js"],"names":["module","exports","initialState","id","title","color","rating","colorCode","combineReducers","colors","state","action","type","filter","map","form","payload","AddColorForm","onAddColor","f","onChangeTitle","onChangeColor","inputTitle","useRef","console","log","className","onSubmit","e","preventDefault","current","focus","ref","value","onChange","target","placeholder","disabled","length","mapDisplatchToProps","v4","connect","isDisabledButton","props","Star","selected","onRate","onClick","StarRating","totalStars","Array","star","index","key","Color","this","style","backgroundColor","nextProps","nextState","prevProps","prevState","onRemoveColor","src","iconRemove","alt","width","height","React","Component","ColorList","mapDispatchToProps","App","store","createStore","rootReducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f37f1c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color-icon-remove.91bebd82.svg\";","import { ADD_COLOR, REMOVE_COLOR, RATE_COLOR } from './actions';\n\nconst initialState = [\n  {\n    id: 1,\n    title: 'Brandy',\n    color: '#87413F',\n    rating: 5,\n  },\n  {\n    id: 2,\n    title: 'Avocado',\n    color: '#568203',\n    rating: 4,\n  },\n  {\n    id: 3,\n    title: 'Black coffee',\n    color: '#3B2F2F',\n    rating: 5,\n  },\n  {\n    id: 4,\n    title: 'Blue sapphire',\n    color: '#126180',\n    rating: 0,\n  },\n];\n\nexport const colorsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COLOR:\n      return [\n        ...state,\n        {\n          id: action.id,\n          title: action.title,\n          color: action.color,\n          rating: 0,\n        },\n      ];\n    case REMOVE_COLOR:\n      return state.filter((color) => color.id !== action.id);\n    case RATE_COLOR:\n      return state.map((color) =>\n        color.id !== action.id ? color : { ...color, rating: action.rating }\n      );\n    default:\n      return state;\n  }\n};\n","import { CHANGE_TITLE_TEXT, CHANGE_COLOR_CODE } from './actions';\n\nconst initialState = {\n  title: '',\n  colorCode: '#F16720',\n};\n\nexport const formReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_TITLE_TEXT:\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case CHANGE_COLOR_CODE:\n      return {\n        ...state,\n        colorCode: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { colorsReducer } from './colors/reducers';\nimport { formReducer } from './form/reducers';\n\nexport default combineReducers({\n  colors: colorsReducer,\n  form: formReducer,\n});\n","import { v4 } from 'uuid';\n\nexport const ADD_COLOR = 'ADD_COLOR';\nexport const REMOVE_COLOR = 'REMOVE_COLOR';\nexport const RATE_COLOR = 'RATE_COLOR';\n\nexport const addColor = (title, color) => ({\n  type: ADD_COLOR,\n  id: v4(),\n  title,\n  color,\n});\n\nexport const removeColor = (id) => ({\n  type: REMOVE_COLOR,\n  id,\n});\n\nexport const rateColor = (id, rating) => ({\n  type: RATE_COLOR,\n  id,\n  rating,\n});\n","export const CHANGE_TITLE_TEXT = 'CHANGE_TITLE_TEXT';\nexport const CHANGE_COLOR_CODE = 'CHANGE_COLOR_CODE';\n\nexport const setTitleText = (title) => ({\n  type: CHANGE_TITLE_TEXT,\n  payload: title,\n});\n\nexport const setColorCode = (colorCode) => ({\n  type: CHANGE_COLOR_CODE,\n  payload: colorCode,\n});\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './AddColorForm.scss';\n\nconst AddColorForm = ({\n  title = '',\n  colorCode = '#CCCCCC',\n  onAddColor = (f) => f,\n  onChangeTitle = (f) => f,\n  onChangeColor = (f) => f,\n}) => {\n  const inputTitle = useRef(null);\n\n  const changeTitle = (e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const changeColor = (e) => {\n    onChangeColor(e.target.value);\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    onAddColor(title, colorCode);\n    onChangeTitle('');\n    onChangeColor('#F16720');\n    inputTitle.current.focus();\n  };\n\n  console.log(title);\n\n  return (\n    <form className=\"add-color-form\" onSubmit={submit}>\n      <input\n        className=\"add-color-form__input\"\n        ref={inputTitle}\n        type=\"text\"\n        value={title}\n        onChange={changeTitle}\n        placeholder=\"Заголовок цвета...\"\n      />\n      <input\n        className=\"add-color-form__input add-color-form__input--color\"\n        type=\"color\"\n        onChange={changeColor}\n        value={colorCode}\n      />\n      <button\n        className=\"add-color-form__button\"\n        type=\"submit\"\n        disabled={!title.length}\n      >\n        Добавить цвет\n      </button>\n    </form>\n  );\n};\n\nAddColorForm.propTypes = {\n  title: PropTypes.string,\n  colorCode: PropTypes.string,\n  onAddColor: PropTypes.func,\n  onChangeTitle: PropTypes.func,\n  onChangeColor: PropTypes.func,\n};\n\nexport default AddColorForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addColor } from '../../store/colors/actions';\nimport { setTitleText, setColorCode } from '../../store/form/actions';\nimport AddColorForm from './AddColorForm';\n\nconst AddColorFormContainer = (props) => {\n  return (\n    <AddColorForm\n      isDisabledButton={props.isDisabledButton}\n      title={props.title}\n      colorCode={props.colorCode}\n      onAddColor={props.onAddColor}\n      onChangeTitle={props.onChangeTitle}\n      onChangeColor={props.onChangeColor}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  title: state.form.title,\n  colorCode: state.form.colorCode,\n  isDisabledButton: state.form.isDisabledButton,\n});\n\nconst mapDisplatchToProps = {\n  onAddColor: addColor,\n  onChangeTitle: setTitleText,\n  onChangeColor: setColorCode,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDisplatchToProps\n)(AddColorFormContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Star.scss';\n\nconst Star = ({ selected = false, onRate = (f) => f }) => (\n  <div className={selected ? 'star star--selected' : 'star'} onClick={onRate} />\n);\n\nStar.propTypes = {\n  selected: PropTypes.bool,\n  onRate: PropTypes.func,\n};\n\nexport default Star;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Star from './../Star/Star';\nimport './StarRating.scss';\n\nconst StarRating = ({ rating = 0, totalStars = 5, onRate = (f) => f }) => {\n  return (\n    <div className=\"star-rating\">\n      <div className=\"star-rating__list\">\n        {[...Array(totalStars)].map((star, index) => (\n          <Star\n            key={index}\n            selected={index < rating}\n            onRate={() => onRate(index + 1)}\n          />\n        ))}\n      </div>\n      <p className=\"star-rating__stat\">\n        {rating} из {totalStars}\n      </p>\n    </div>\n  );\n};\n\nStarRating.propTypes = {\n  rating: PropTypes.number,\n  totalStars: PropTypes.number,\n  onRate: PropTypes.func,\n};\n\nexport default StarRating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport iconRemove from './color-icon-remove.svg';\nimport StarRating from './../StarRating/StarRating';\nimport './Color.scss';\n\nclass Color extends React.Component {\n  // UNSAFE_componentWillMount\n  componentWillMount() {\n    const { id } = this.props;\n    console.log('componentWillMount color id', id);\n    this.style = {\n      backgroundColor: '#f1f1f1',\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { rating, id } = this.props;\n    console.log('shouldComponentUpdate color id', id);\n    return rating !== nextProps.rating;\n  }\n\n  // UNSAFE_componentWillUpdate\n  componentWillUpdate(nextProps, nextState) {\n    const { id } = this.props;\n    console.log('componentWillUpdate color id', id);\n    this.style = { backgroundColor: null };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { id } = this.props;\n    console.log('componentDidUpdate color id', id);\n  }\n\n  componentWillUnmount() {\n    const { id } = this.props;\n    console.log('componentWillUnmount color id', id);\n  }\n\n  render() {\n    const {\n      color,\n      title,\n      rating = 0,\n      onRate = (f) => f,\n      onRemoveColor = (f) => f,\n    } = this.props;\n\n    return (\n      <div className=\"color\" style={this.style}>\n        <h3 className=\"color__title\">{title}</h3>\n        <div\n          className=\"color__preview\"\n          style={{ backgroundColor: color }}\n        ></div>\n        <div className=\"color__rating\">\n          <StarRating rating={rating} onRate={onRate} />\n        </div>\n        <button className=\"color__button-remove\" onClick={onRemoveColor}>\n          <img src={iconRemove} alt=\"удалить\" width=\"30\" height=\"30\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nColor.propTypes = {\n  color: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  onRate: PropTypes.func,\n  onRemoveColor: PropTypes.func,\n};\n\nexport default Color;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Color from './../Color/Color';\nimport './ColorList.scss';\n\nconst ColorList = ({\n  colors = [],\n  onRemoveColor = (f) => f,\n  onRate = (f) => f,\n}) => {\n  return (\n    <div className=\"color-list\">\n      {colors.map((color) => (\n        <Color\n          key={color.id}\n          {...color}\n          onRemoveColor={() => onRemoveColor(color.id)}\n          onRate={(rating) => onRate(color.id, rating)}\n        />\n      ))}\n    </div>\n  );\n};\n\nColorList.propTypes = {\n  colors: PropTypes.array,\n  onRemoveColor: PropTypes.func,\n  onRate: PropTypes.func,\n};\n\nexport default ColorList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeColor, rateColor } from '../../store/colors/actions';\nimport ColorList from './ColorList';\n\nconst ColorListContainer = (props) => {\n  return (\n    <ColorList\n      colors={props.colors}\n      onRemoveColor={props.onRemoveColor}\n      onRate={props.onRate}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  colors: [...state.colors],\n});\n\nconst mapDispatchToProps = {\n  onRemoveColor: removeColor,\n  onRate: rateColor,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorListContainer);\n","import React from 'react';\nimport AddColorFormContainer from './components/AddColorForm/AddColorFormContainer';\nimport ColorListContainer from './components/ColorList/ColorListContainer';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <AddColorFormContainer />\n      <ColorListContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducers from './store/reducers';\nimport App from './App';\nimport './index.scss';\n\nconst store = createStore(rootReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}